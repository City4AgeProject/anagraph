package eu.city4age.dashboard.api.pojo.domain;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.ColumnResult;
import javax.persistence.ConstructorResult;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.SqlResultSetMapping;
import javax.persistence.SqlResultSetMappings;
import javax.persistence.Table;
import javax.persistence.NamedNativeQueries;
import javax.persistence.NamedNativeQuery;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonView;

import eu.city4age.dashboard.api.pojo.dto.Gfvs;
import eu.city4age.dashboard.api.pojo.json.view.View;

@SqlResultSetMappings(value = { @SqlResultSetMapping(name = "gess", classes = {
		@ConstructorResult(targetClass = Gfvs.class,
			    columns = { @ColumnResult(name = "uir_id", type = Long.class),
			    		@ColumnResult(name = "ddv_id", type = Long.class),
			    		@ColumnResult(name = "ges_value", type = BigDecimal.class),
			    		@ColumnResult(name = "weight", type = BigDecimal.class)}) })
})
@NamedNativeQueries(value = {
	@NamedNativeQuery(name = "NumericIndicatorValue.doAllGess", resultSetMapping = "gess", query = "WITH mainq AS ( WITH subq1 AS ( SELECT vwdv.user_in_role_id, vwdv.pilot_code, vwdv.detection_variable_id, vwdv.detection_variable_type, vwdv.derived_detection_variable_id, vwdv.derivation_weight, vwmn.derived_nui_id FROM vw_detection_variable_derivation_per_user_in_role AS vwdv LEFT JOIN vw_mea_nui_derivation_per_pilots AS vwmn ON vwdv.pilot_code = vwmn.pilot_code AND vwdv.detection_variable_id = vwmn.mea_id WHERE vwdv.detection_variable_type = 'MEA' AND vwdv.derived_detection_variable_id IN ( SELECT vwd.detection_variable_id FROM vw_detection_variable_derivation_per_user_in_role AS vwd WHERE vwd.detection_variable_type = 'GES' ) ), subq2 AS ( SELECT nui.user_in_role_id, nui.nui_type_id, nui.nui_value, nui2.nui_value AS nui_zero_value FROM numeric_indicator_value AS nui INNER JOIN time_interval AS ti ON nui.time_interval_id = ti.id LEFT JOIN numeric_indicator_value AS nui2 ON nui.user_in_role_id = nui2.user_in_role_id AND nui.nui_type_id = nui2.nui_type_id WHERE ti.interval_start >= :startOfMonth AND ti.interval_start <= :endOfMonth AND nui2.id = ( SELECT MIN (nui1.id) FROM numeric_indicator_value AS nui1 WHERE nui1.user_in_role_id = nui2.user_in_role_id AND nui1.nui_type_id = nui2.nui_type_id ) ), subq3 AS ( SELECT derivation_weight, user_in_role_id, detection_variable_id FROM vw_detection_variable_derivation_per_user_in_role ) SELECT subq1.user_in_role_id, subq1.derived_detection_variable_id, subq1.derivation_weight AS w1, subq3.derivation_weight, SUM ( CASE WHEN subq2.nui_zero_value = 0 THEN 3 WHEN ( subq2.nui_value - subq2.nui_zero_value ) * sign(subq1.derivation_weight) / subq2.nui_zero_value >.25 THEN 5 WHEN ( subq2.nui_value - subq2.nui_zero_value ) * sign(subq1.derivation_weight) / subq2.nui_zero_value >.1 THEN 4 WHEN ( subq2.nui_value - subq2.nui_zero_value ) * sign(subq1.derivation_weight) / subq2.nui_zero_value > -.1 THEN 3 WHEN ( subq2.nui_value - subq2.nui_zero_value ) * sign(subq1.derivation_weight) / subq2.nui_zero_value > -.25 THEN 2 ELSE 1 END ) / COUNT (subq2.nui_value) derived_mea_value FROM subq1 INNER JOIN subq2 ON subq2.nui_type_id = subq1.derived_nui_id AND subq2.user_in_role_id = subq1.user_in_role_id INNER JOIN subq3 ON subq3.detection_variable_id = subq1.derived_detection_variable_id AND subq3.user_in_role_id = subq1.user_in_role_id GROUP BY subq1.user_in_role_id, subq1.derived_detection_variable_id, subq1.derivation_weight, subq2.nui_zero_value, subq2.nui_value, subq1.derived_nui_id, subq3.derivation_weight ) SELECT mainq.user_in_role_id AS uir_id, mainq.derived_detection_variable_id AS ddv_id, mainq.derivation_weight AS weight, SUM ( mainq.derived_mea_value * ABS (mainq.w1) ) / SUM (ABS(mainq.w1)) AS ges_value FROM mainq GROUP BY mainq.user_in_role_id, mainq.derived_detection_variable_id, mainq.derivation_weight ORDER BY mainq.user_in_role_id;")
})
/**
 * NumericIndicatorValue generated by hbm2java
 */
@Entity
@Table(name = "numeric_indicator_value")
public class NumericIndicatorValue implements Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 2422155784673783252L;
	
	@Id
	@Basic(optional = false)
	@SequenceGenerator(name = "nui_seq", sequenceName = "numeric_indicator_value_id_seq", allocationSize = 1)
	@GeneratedValue(generator = "nui_seq", strategy = GenerationType.SEQUENCE)
	@Column(name = "id", insertable = true, updatable = true, unique = true, nullable = false)
	protected Long id;

	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@JsonView(View.NUIView.class)
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "nui_type_id", insertable = false, updatable = false)
	private DetectionVariable detectionVariable;
	
	@Column(name = "nui_type_id")
	private Long detectionVariableId;

	@JsonView(View.NUIView.class)
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "time_interval_id", referencedColumnName = "id")
	private TimeInterval timeInterval;

	@JsonView(View.NUIView.class)
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_in_role_id", insertable = false, updatable = false)
	private UserInRole userInRole;
	
	@Column(name = "user_in_role_id")
	private Long userInRoleId;
	
	@JsonView(View.NUIView.class)
	@Column(name = "nui_value", precision = 20, scale = 8)
	private BigDecimal nuiValue;

	@Column(name = "data_source_type", length = 1000)
	private String dataSourceType;
	// private Set interActivityBehaviourVariations = new HashSet(0);

	@JsonInclude(JsonInclude.Include.NON_EMPTY)
	@OneToMany(mappedBy = "numericIndicatorValue", fetch = FetchType.LAZY)
	private Set<InterActivityBehaviourVariation> interActivityBehaviourVariations = new HashSet<InterActivityBehaviourVariation>(0);

	public NumericIndicatorValue() {
	}

	public NumericIndicatorValue(String dataSourceType, DetectionVariable detectionVariable,
			TimeInterval timeInterval, BigDecimal nuiValue) {

		this.dataSourceType = dataSourceType;
		this.detectionVariable = detectionVariable;
		this.timeInterval = timeInterval;
		this.nuiValue = nuiValue;
	}

	public NumericIndicatorValue(DetectionVariable detectionVariable, String dataSourceType,
			TimeInterval timeInterval, UserInRole userInRole, BigDecimal nuiValue, 
			Set<InterActivityBehaviourVariation> interActivityBehaviourVariations) {

		this.dataSourceType = dataSourceType;
		this.detectionVariable = detectionVariable;
		this.timeInterval = timeInterval;
		this.userInRole = userInRole;
		this.nuiValue = nuiValue;
		this.interActivityBehaviourVariations = interActivityBehaviourVariations;
	}

	public DetectionVariable getDetectionVariable() {
		return detectionVariable;
	}

	public void setDetectionVariable(DetectionVariable detectionVariable) {
		this.detectionVariable = detectionVariable;
	}

	public Long getDetectionVariableId() {
		return detectionVariableId;
	}

	public void setDetectionVariableId(Long detectionVariableId) {
		this.detectionVariableId = detectionVariableId;
	}

	public TimeInterval getTimeInterval() {
		return this.timeInterval;
	}

	public void setTimeInterval(TimeInterval timeInterval) {
		this.timeInterval = timeInterval;
	}

	public UserInRole getUserInRole() {
		return this.userInRole;
	}

	public void setUserInRole(UserInRole userInRole) {
		this.userInRole = userInRole;
	}

	public Long getUserInRoleId() {
		return userInRoleId;
	}

	public void setUserInRoleId(Long userInRoleId) {
		this.userInRoleId = userInRoleId;
	}

	public BigDecimal getNuiValue() {
		return this.nuiValue;
	}

	public void setNuiValue(BigDecimal nuiValue) {
		this.nuiValue = nuiValue;
	}

	public String getDataSourceType() {
		return this.dataSourceType;
	}

	public void setDataSourceType(String dataSourceType) {
		this.dataSourceType = dataSourceType;
	}

	public Set<InterActivityBehaviourVariation> getInterActivityBehaviourVariations() {
		return this.interActivityBehaviourVariations;
	}	

	public void setInterActivityBehaviourVariations(Set<InterActivityBehaviourVariation> interActivityBehaviourVariations) {
		this.interActivityBehaviourVariations = interActivityBehaviourVariations;
	}

}

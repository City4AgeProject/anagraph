package eu.city4age.dashboard.api.pojo.domain;

import java.math.BigDecimal;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * VariationMeasureValue generated by hbm2java
 */
@Entity
@Table(name = "variation_measure_value")
public class VariationMeasureValue extends AbstractBaseEntity {

	/**
	 * 
	 */
	private static final long serialVersionUID = 2579000073949031381L;
	
	
	private Activity activity;
	private DetectionVariable cdDetectionVariable;
	private TimeInterval timeInterval;
	private UserInRole userInRole;
	private BigDecimal measureValue;
	//private String dataSourceType;
	private String extraInformation;

	public VariationMeasureValue() {
	}

	public VariationMeasureValue( DetectionVariable cdDetectionVariable, TimeInterval timeInterval,
			UserInRole userInRole) {
		
		this.cdDetectionVariable = cdDetectionVariable;
		this.timeInterval = timeInterval;
		this.userInRole = userInRole;
	}

	public VariationMeasureValue( Activity activity, DetectionVariable cdDetectionVariable,
			TimeInterval timeInterval, UserInRole userInRole, BigDecimal measureValue, /*String dataSourceType,*/
			String extraInformation) {
		
		this.activity = activity;
		this.cdDetectionVariable = cdDetectionVariable;
		this.timeInterval = timeInterval;
		this.userInRole = userInRole;
		this.measureValue = measureValue;
		//this.dataSourceType = dataSourceType;
		this.extraInformation = extraInformation;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "activity_id")
	public Activity getActivity() {
		return this.activity;
	}

	public void setActivity(Activity activity) {
		this.activity = activity;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "measure_type_id", nullable = false)
	public DetectionVariable getCdDetectionVariable() {
		return this.cdDetectionVariable;
	}

	public void setCdDetectionVariable(DetectionVariable cdDetectionVariable) {
		this.cdDetectionVariable = cdDetectionVariable;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "time_interval_id", nullable = false)
	public TimeInterval getTimeInterval() {
		return this.timeInterval;
	}

	public void setTimeInterval(TimeInterval timeInterval) {
		this.timeInterval = timeInterval;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_in_role_id", nullable = false)
	public UserInRole getUserInRole() {
		return this.userInRole;
	}

	public void setUserInRole(UserInRole userInRole) {
		this.userInRole = userInRole;
	}

	@Column(name = "measure_value", precision = 30, scale = 10)
	public BigDecimal getMeasureValue() {
		return this.measureValue;
	}

	public void setMeasureValue(BigDecimal measureValue) {
		this.measureValue = measureValue;
	}

/*	@Column(name = "data_source_type", length = 1000)
	public String getDataSourceType() {
		return this.dataSourceType;
	}*/

/*	public void setDataSourceType(String dataSourceType) {
		this.dataSourceType = dataSourceType;
	}*/

	@Column(name = "extra_information", length = 1000)
	public String getExtraInformation() {
		return this.extraInformation;
	}

	public void setExtraInformation(String extraInformation) {
		this.extraInformation = extraInformation;
	}

}
